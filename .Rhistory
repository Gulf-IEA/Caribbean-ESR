load("~/My Github Projects/Caribbean-ESR/indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
load("~/My Github Projects/Caribbean-ESR/indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
test = readRDS("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
load("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
load("indicator_objects/OA.RData")
load("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- as.character(species_data$YEAR)
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- character(species_data$YEAR)
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- character(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- factor(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- as.character(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
load("indicator_objects/gini.RData")
prico = readRDS("indicator_data/RVC/prico_2001_2021_calibrated.rds")
sttstj = readRDS("indicator_data/RVC/sttstj_2001_2021_calibrated.rds")
stx = readRDS("indicator_data/RVC/stx_2001_2021_calibrated.rds")
## Make a list of species
## You can use full scientific names, common names, or
## species codes (first 3 letters of genus, and first 4 of species)
## Only scientific names are case-sensitive
spcs = c("OCY CHRY", "LUT ANAL", "BAL VETU", "EPI GUTT", "SPA AURO", "SPA VIRI")
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- integer(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- ddens$YEAR
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
load("indicator_objects/gini.RData")
load("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
plotIndicatorTimeSeries(inddata)
View(inddata)
load("indicator_objects/gini.RData")
View(inddata)
load("indicator_objects/OA.RData")
View(inddata)
load("indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
load("../indicator_objects/gini.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
load("../indicator_objects/OceanNAICS.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
load("../indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
load("indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
View(prico)
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens$YEAR <- character(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s, trendAnalysis = F)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens = na.omit(ddens)
ddens$YEAR <- as.character(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s, trendAnalysis = F)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
load("indicator_objects/RUVdensity_PRICO_BAL VETU.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
calibrated = read.csv("indicator_data/RVC/calibrated_species.csv")
prico = readRDS("indicator_data/RVC/prico_2001_2021_calibrated.rds")
sttstj = readRDS("indicator_data/RVC/sttstj_2001_2021_calibrated.rds")
stx = readRDS("indicator_data/RVC/stx_2001_2021_calibrated.rds")
## Make a list of species
## You can use full scientific names, common names, or
## species codes (first 3 letters of genus, and first 4 of species)
## Only scientific names are case-sensitive
spcs = c("OCY CHRY", "LUT ANAL", "BAL VETU", "EPI GUTT", "SPA AURO", "SPA VIRI")
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
# Convert year to character
ddens = na.omit(ddens)
ddens$YEAR <- as.character(ddens$YEAR)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s, trendAnalysis = F)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(prico, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
View(ddens)
ddens$YEAR <- as.character(ddens$YEAR)
View(ddens)
regions = c("PRICO","STTSTJ","STX")
for(j in regions) {
# call data for the current region
dat = switch(j,
"PRICO" = prico,
"STTSTJ" = sttstj,
"STX" = stx)
## Calculate statistics for entire sampling domain
ddens = getDomainDensity(dat, species = spcs)
# Convert SPECIES_CD to factor to ensure correct ordering in plots
ddens$SPECIES_CD <- factor(ddens$SPECIES_CD)
species <- unique(ddens$SPECIES_CD)
for (i in species) {
# Subset data for the current species
species_data <- filter(ddens, SPECIES_CD == i)
# format indicator object -----------------------------
datdata <- species_data$YEAR
inddata <- data.frame(species_data$density)
labs <- c(j, paste("Density", i), "")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
s <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(s) <- "indicatordata"
# save and plot -----------------------------------------
plotIndicatorTimeSeries(s, trendAnalysis = F)
inddata <- s
save(inddata, file = paste("indicator_objects/RUVdensity_", j, "_", i, ".RData", sep = ""))
}
}
library(readr)
sargassum_innundation_monthly_mean_hu <- read_csv("indicator_data/sargassum_innundation_monthly_mean_hu.csv")
View(sargassum_innundation_monthly_mean_hu)
untar(tarfile = "../../../Downloads/0190272.2.2.tar")
test = untar(tarfile = "../../../Downloads/0190272.2.2.tar")
untar(tarfile = "../../../Downloads/0190272.2.2.tar", exdir = "../../../Downloads")
library(ncdf4) # package for netcdf manipulation
install.packages("ncdf4")
library(ncdf4)
nc_data = nc_open("../../../Downloads/0190272/2.2/data/0-data/2006-2010.S_density/Year-2006-04.S_density.nc")
View(nc_data)
library(plotTimeSeries)
library(spam)
load("../indicator_objects/OceanNAICS.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/gini.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = F, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/NCRMP_coral_cover_richness.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
plotIndicatorTimeSeries(inddata, trendAnalysis = T)
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, trendAnalysis = F)
plotIndicatorTimeSeries(ind, coltoplot = 1:2, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/OceanNAICS.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, plotrownum = 2, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:8, plotrownum = 2, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:8, plotrownum = 3, trendAnalysis = T, sublabel = T)
load("../indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
plotIndicatorTimeSeries(inddata, trendAnalysis = T)
load("../indicator_objects/ACEindex.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/ACEindex.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/OA.RData")
load("../indicator_objects/ACEindex.RData")
load("../indicator_objects/turbidity.RData")
load("../indicator_objects/turbidity.RData")
load("../indicator_objects/turbidity.RData")
load("../indicator_objects/ACEindex.RData")
plotIndicatorTimeSeries(ind, trendAnalysis = F)
plotIndicatorTimeSeries(ind, trendAnalysis = T)
load("../indicator_objects/turbidity.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 1, trendAnalysis = T)
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T)
load("../indicator_objects/beach_litter_un_carib.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/marine_debris.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
load("../indicator_objects/carib_Chl.RData")
plotIndicatorTimeSeries(ind, trendAnalysis = F)
load("../indicator_objects/earthquakes.RData")
plotIndicatorTimeSeries(ind, trendAnalysis = F)
plotIndicatorTimeSeries(ind, trendAnalysis = T)
load("../indicator_objects/disturbance.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = F)
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, trendAnalysis = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, trendAnalysis = T, sublabel = T)
load("../indicator_objects/Sargassum.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = T)
load("../indicator_objects/sargassum_innundation_monthly_mean_hu.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, sublabel = T, trendAnalysis = T)
load("../indicator_objects/hotel_occupancy_rates_USVI_and_PR).RData")
load("../indicator_objects/hotel_occupancy_rates_USVI_and_PR.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, sublabel = T, trendAnalysis = T)
load("../indicator_objects/hotel_occupancy.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, sublabel = T, trendAnalysis = T)
load("../indicator_objects/OA.RData")
plotIndicatorTimeSeries(inddata, trendAnalysis = T)
load("../indicator_objects/fish_density.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/fish_density.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/NCRMP_coral_cover_richness.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:6, sublabel = T, trendAnalysis = F)
load("../indicator_objects/coral_spprichness_cover.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:4, sublabel = T, trendAnalysis = F)
plotIndicatorTimeSeries(inddata, coltoplot = 1:4, sublabel = T, trendAnalysis = T)
load("../indicator_objects/Carib_SST.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/total_landings.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:9, plotrownum = 3, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, plotrownum = 3, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, plotcolnum = 3, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, hgtadj = 5, trendAnalysis = T, sublabel = T)
load("../indicator_objects/total_landings.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, , trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, trendAnalysis = T, sublabel = T)
load("../indicator_objects/total_landings.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, trendAnalysis = T, sublabel = T)
load("../indicator_objects/gini.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/total_rec_catch.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, , trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, widadj = 4, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, widadj = 10, trendAnalysis = T, sublabel = T)
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, trendAnalysis = T, sublabel = T)
load("../indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, trendAnalysis = T, sublabel = T, anom = stmon)
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, anom = stmon)
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, anom = mon)
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%M")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
load("../indicator_objects/turbidity.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, dateformat = "%m%-%Y")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, dateformat = "%m-%Y")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, dateformat = "%m-%Y", sublabel = T)
load("../indicator_objects/Carib_SST.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, plotrownum = 2, trendAnalysis = T, sublabel = T, dateformat = "%m-%Y")
plotIndicatorTimeSeries(ind, coltoplot = 1:3, trendAnalysis = T, sublabel = T, dateformat = "%m-%Y")
load("../indicator_objects/carib_Chl.RData")
plotIndicatorTimeSeries(ind, trendAnalysis = F, dateformat = "%m-%Y")
plotIndicatorTimeSeries(ind, trendAnalysis = T, dateformat = "%m-%Y")
load("../indicator_objects/sargassum_innundation_monthly_mean_hu.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:3, sublabel = T, trendAnalysis = T, dateformat = "%Y%b")
load("../indicator_objects/hotel_occupancy_rates_USVI_and_PR.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, sublabel = T, trendAnalysis = T, dateformat = "%Y%b")
load("../indicator_objects/hotel_occupancy.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:2, sublabel = T, trendAnalysis = T, dateformat = "%Y%b")
load("../indicator_objects/landings.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:6, trendAnalysis = T, sublabel = T)
load("../indicator_objects/total_landings.RData")
plotIndicatorTimeSeries(inddata, coltoplot = 1:9, plotrownum = 3, plotcolnum = 3, trendAnalysis = T, sublabel = T)
