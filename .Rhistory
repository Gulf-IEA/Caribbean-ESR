strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Change in Standardized Indicator Scores Over Time by Community", region),
x = "Year",
y = "Score",
color = "Community")
ggsave(paste0("indicator_plots/CSVI_plots/Line_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Heatmaps for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Community, fill = Score)) +
geom_tile() +
facet_wrap(~ Indicator, scales = "free_y") +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Heatmap of Standardized Indicator Scores by Community and Year", region),
x = "Year",
y = "Community",
fill = "Score")
ggsave(paste0("indicator_plots/CSVI_plots/Heatmap_", region, ".png"), plot = p, width = 12, height = 8, bg = "white")
}
# Create Box Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Score, fill = as.factor(Year))) +
geom_boxplot() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Distribution of Standardized Indicator Scores by Community and Year", region),
x = "Year",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Box_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Box Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Score, fill = as.factor(Year))) +
geom_boxplot() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Distribution of Standardized Indicator Scores by Year", region),
x = "Year",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Box_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
library(readr)
CSVI_2010 = read_csv("indicator_data/CaribCSVI_2010.csv", locale = locale(encoding = "UTF-8"))
CSVI_2020 = read_csv("indicator_data/CaribCSVI_2020.csv", locale = locale(encoding = "UTF-8"))
library(ggplot2)
library(dplyr)
library(tidyr)
CSVI_2010$Year <- 2010
CSVI_2020$Year <- 2020
# Combine both dataframes
df_combined <- bind_rows(CSVI_2010, CSVI_2020)
#remove columns for raw data
df_combined = df_combined[,-c(2:7)]
# Convert to long format for ggplot
df_long <- df_combined %>%
pivot_longer(cols = ends_with("Cat"),
names_to = "Indicator",
values_to = "Score")
# Remove rows with NA values
df_long <- na.omit(df_long)
df_long$Region = as.character(df_long$Region)
df_long$Year = as.factor(df_long$Year)
df_long$Indicator = as.character(df_long$Indicator)
df_long$Score = as.integer(df_long$Score)
# Rename and combine regions
df_long <- df_long %>%
mutate(Region = recode(Region,
'STT' = 'St. Thomas & St. John',
'STJ' = 'St. Thomas & St. John',
'STX' = 'St. Croix',
'W' = 'Puerto Rico West',
'E' = 'Puerto Rico East'))
# Verify the changes
unique(df_long$Region)
# Rename indicators
df_long <- df_long %>%
mutate(Indicator = recode(Indicator,
'PerDisCat' = 'Personal Disruption',
'PopComCat' = 'Pop Composition',
'PovertyCat' = 'Poverty',
'LabFrc_revCat' = 'Labor Force',
'HsChr_rev_Cat' = 'Housing Charac',
'RetMigCat' = 'Retiree Migration'))
unique(df_long$Indicator)
# Create Faceted Bar Plots for each region
regions <- unique(df_long$Region)
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = Community, y = Score, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Standardized Indicator Scores by Community & Year", region),
x = "Community",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Faceted_Bar_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Line Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = Year, y = Score, color = Community, group = Community)) +
geom_line() +
geom_point() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Change in Standardized Indicator Scores Over Time by Community", region),
x = "Year",
y = "Score",
color = "Community")
ggsave(paste0("indicator_plots/CSVI_plots/Line_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Heatmaps for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Community, fill = Score)) +
geom_tile() +
facet_wrap(~ Indicator, scales = "free_y") +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Heatmap of Standardized Indicator Scores by Community and Year", region),
x = "Year",
y = "Community",
fill = "Score")
ggsave(paste0("indicator_plots/CSVI_plots/Heatmap_", region, ".png"), plot = p, width = 12, height = 8, bg = "white")
}
# Create Box Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Score, fill = as.factor(Year))) +
geom_boxplot() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Distribution of Standardized Indicator Scores by Year", region),
x = "Year",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Box_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
library(readr)
CSVI_2010 = read_csv("indicator_data/CaribCSVI_2010.csv", locale = locale(encoding = "UTF-8"))
View(CSVI_2010)
CSVI_2020 = read_csv("indicator_data/CaribCSVI_2020.csv", locale = locale(encoding = "UTF-8"))
library(ggplot2)
library(dplyr)
library(tidyr)
CSVI_2010$Year <- 2010
CSVI_2020$Year <- 2020
# Combine both dataframes
df_combined <- bind_rows(CSVI_2010, CSVI_2020)
#remove columns for raw data
df_combined = df_combined[,-c(2:7)]
# Convert to long format for ggplot
df_long <- df_combined %>%
pivot_longer(cols = ends_with("Cat"),
names_to = "Indicator",
values_to = "Score")
# Remove rows with NA values
df_long <- na.omit(df_long)
df_long$Community = as.character(df_long$Community)
df_long$Region = as.character(df_long$Region)
df_long$Year = as.factor(df_long$Year)
df_long$Indicator = as.character(df_long$Indicator)
df_long$Score = as.integer(df_long$Score)
# Rename and combine regions
df_long <- df_long %>%
mutate(Region = recode(Region,
'STT' = 'St. Thomas & St. John',
'STJ' = 'St. Thomas & St. John',
'STX' = 'St. Croix',
'W' = 'Puerto Rico West',
'E' = 'Puerto Rico East'))
# Verify the changes
unique(df_long$Region)
# Rename indicators
df_long <- df_long %>%
mutate(Indicator = recode(Indicator,
'PerDisCat' = 'Personal Disruption',
'PopComCat' = 'Pop Composition',
'PovertyCat' = 'Poverty',
'LabFrc_revCat' = 'Labor Force',
'HsChr_rev_Cat' = 'Housing Charac',
'RetMigCat' = 'Retiree Migration'))
unique(df_long$Indicator)
# Create Faceted Bar Plots for each region
regions <- unique(df_long$Region)
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = Community, y = Score, fill = as.factor(Year))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 5),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Standardized Indicator Scores by Community & Year", region),
x = "Community",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Faceted_Bar_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Line Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = Year, y = Score, color = Community, group = Community)) +
geom_line() +
geom_point() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Change in Standardized Indicator Scores Over Time by Community", region),
x = "Year",
y = "Score",
color = "Community")
ggsave(paste0("indicator_plots/CSVI_plots/Line_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Create Heatmaps for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Community, fill = Score)) +
geom_tile() +
facet_wrap(~ Indicator, scales = "free_y") +
scale_fill_gradient(low = "blue", high = "red") +
theme_minimal() +
theme(panel.background = element_rect(fill = "white", color = NA),
plot.background = element_rect(fill = "white", color = NA),
axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Heatmap of Standardized Indicator Scores by Community and Year", region),
x = "Year",
y = "Community",
fill = "Score")
ggsave(paste0("indicator_plots/CSVI_plots/Heatmap_", region, ".png"), plot = p, width = 12, height = 8, bg = "white")
}
# Create Box Plots for each region
for (region in regions) {
p <- ggplot(df_long %>% filter(Region == region), aes(x = as.factor(Year), y = Score, fill = as.factor(Year))) +
geom_boxplot() +
facet_wrap(~ Indicator, scales = "free_y") +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
axis.text.y = element_text(size = 10),
strip.text = element_text(size = 10),
legend.title = element_text(size = 10),
legend.text = element_text(size = 10)) +
labs(title = paste("Distribution of Standardized Indicator Scores by Year", region),
x = "Year",
y = "Score",
fill = "Year")
ggsave(paste0("indicator_plots/CSVI_plots/Box_Plot_", region, ".png"), plot = p, width = 12, height = 8)
}
# Tally number of stocks from Maria's table:
PR = 34
STTSTJ = 20
STX = 20
PR_perc = 1/PR
PR_perc
USVI_perc = 1/STX
USVI_perc
USVI_perc = 3/STX
USVI_perc
PR_perc = 1/PR
USVI_perc = 1/STX
# Tally number of stocks from Maria's table:
PR_stocks = 34
STTSTJ_stocks = 20
STX_stocks = 20
PR_perc = 1/PR_stocks
USVI_perc = 1/STX_stocks
PR = as.vector(0,0,0,0,0,0,0,0,0,0,0,0,PR_perc)
PR_perc
PR = as.vector(0,0,0,0,0,0,0,0,0,0,0,0,3)
PR = c(0,0,0,0,0,0,0,0,0,0,0,0,PR_perc)
PR
# Tally number of stocks from Maria's table:
PR_stocks = 34
STTSTJ_stocks = 20
STX_stocks = 20
PR_perc = (1/PR_stocks)*100
USVI_perc = (1/STX_stocks)*100
PR = c(0,0,0,0,0,0,0,0,0,0,0,0,PR_perc)
PR
USVI = c(0,0,0,0,0,0,0,0,0,0,0,0,USVI_perc)
USVI
# save as indicator object ----------------------
datdata <- 2011:2023
inddata <- data.frame(cbind(PR, USVI))
labs <- c("Stocks/complexes with Tier 3 designation" , "Percent", "Puerto Rico",
"Stocks/complexes with Tier 3 designation" , "Percent", "USVI")
indnames <- data.frame(matrix(labs, nrow = 3, byrow = F))
ind <- list(labels = indnames, indicators = inddata, datelist = datdata)
class(inddata) <- "indicatordata"
# plot and save ----------------------------------
plotIndicatorTimeSeries(ind, plotrownum = 2, coltoplot = 1:2, sublabel = TRUE, dateformat = "%Y%b", trendAnalysis = T)
library(plotTimeSeries)
# plot and save ----------------------------------
plotIndicatorTimeSeries(ind, plotrownum = 2, coltoplot = 1:2, sublabel = TRUE, dateformat = "%Y%b", trendAnalysis = T)
save(ind, file = "indicator_objects/tier3.RData")
rm(list = ls())
directory <- rprojroot::find_rstudio_root_file()
setwd(directory)
library(plotTimeSeries)
library(spam)
png(file="indicator_plots/DegreeHeatingWeeks.png", width=600, height=350)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png")
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", res=100)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", res=200)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", res=50)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", width=6, height=4, units="in")
png(file="indicator_plots/DegreeHeatingWeeks.png", width=6, height=4, units="in", res=100)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", width=6, height=4, units="in", res=200)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", width=5, height=4, units="in", res=200)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", width=5, height=4, units="in", res=150)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
png(file="indicator_plots/DegreeHeatingWeeks.png", width=4, height=4, units="in", res=250)
load("indicator_objects/DegreeHeatingWeeks.RData")
plotIndicatorTimeSeries(ind, coltoplot = 1:2, trendAnalysis = T, sublabel = T, dateformat = "%Y%m", plotrownum = 2, plotcolnum = 1)
dev.off()
url1<-'https://www.bde.pr.gov/BDE/PREDDOCS/I_CRUISE.XLS'
library(readxl)
library(httr)
packageVersion("readxl")
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
View(df)
df = df[c(52,63),]
View(df)
total_passengers = df[63,]
View(total_passengers)
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
total_passengers = df[63,]
View(total_passengers)
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
df2 = df[c(52,63),]
df2 = t(df2)
View(df2)
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
df2 = df[c(52,63),]
df2t = as.data.frame(t(df2))
View(df2t)
View(df2t)
df2t = df2t[-c(1,2,12),-1]
View(df2)
df2t = as.data.frame(t(df2))
df2t = df2t[-c(1,2,12)]
View(df2t)
df2t = as.data.frame(t(df2))
df2t = df2t[-c(1,2,12),]
View(df2t)
url1<-'https://www.bde.pr.gov/BDE/PREDDOCS/I_CRUISE.XLS'
library(readxl)
library(httr)
packageVersion("readxl")
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
df2 = df[c(52,63),]
df2t = as.data.frame(t(df2))
df2t = df2t[-c(1,2,12),]
View(df2t)
yrs_PR = df2t$V1
cruise_PR = df2t$V2
rm(list = ls())
library(pdftools)
library(xml2)
library(rvest)
URL <- "https://usviber.org/archived-data/"
pg <- read_html(URL)
lis <- html_attr(html_nodes(pg, "a"), "href")
lablis <- lis[9:32]
findat <- c()
miss <- c(1995, 1997, 1999, 2002, 2017)
for (i in 1:length(lablis))  {
pdf <- pdf_text(lablis[i]) %>% readr::read_lines()
pdf.labs <- pdf[c(grep("Period", pdf))]
all_stat_lines <- pdf.labs %>% str_squish() %>% strsplit(split = " ")
df1 <- plyr::ldply(all_stat_lines, header = T)
st <- grep("January", pdf)[2]
pdf.stats <- pdf[c(st:(st+11))]
all_stat_lines <- pdf.stats %>% str_squish() %>% strsplit(split = " ")
df <- plyr::ldply(all_stat_lines, header = T)
names(df) <- df1
df2 <- df[, c(2, 5)]
names(df2) <- c("STT", "STX")
df2$yr <- as.numeric(rep(df1[2], 12))
df2$mon <- df[, 1]
findat <- rbind(findat, df2)
if (df1[3] %in% miss) {
df2 <- df[, c(3, 6)]
names(df2) <- c("STT", "STX")
df2$yr <- as.numeric(rep(df1[3], 12))
df2$mon <- df[, 1]
print(pdf[c(5:9)])
print(df2)
findat <- rbind(findat, df2)
}
print(pdf[c(5:9)])
print(df2)
}
yrs_PR
url1<-'https://www.bde.pr.gov/BDE/PREDDOCS/I_CRUISE.XLS'
library(readxl)
library(httr)
packageVersion("readxl")
GET(url1, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 2L)
str(df)
df2 = df[c(52,63),]
df2t = as.data.frame(t(df2))
df2t = df2t[-c(1,2,12),]
yrs_PR = df2t$V1
cruise_PR = df2t$V2
yrs_PR
yrs_PR = as.integer(df2t$V1)
cruise_PR = df2t$V2
yrs_PR
yrs_PR
cruise_PR
install.packages("pdftables")
library(pdftools)
library(pdftables)
df = pdf_text("https://usviber.org/wp-content/uploads/2023/12/Tourism-indicator-2022-12-28-23-1.pdf")
url2 <- 'https://usviber.org/wp-content/uploads/2023/12/Tourism-indicator-2022-12-28-23-1.pdf'
GET(url2, write_disk(tf <- tempfile(fileext = ".pdf")))
df = pdf_text(tf)
library(tabulizer)
install.packages("tabulapdf")
library(tabulapdf)
require(pdftools)
require(tidyverse)
require(ggplot2)
url2 <- 'https://usviber.org/wp-content/uploads/2023/12/Tourism-indicator-2022-12-28-23-1.pdf'
raw_text <- map(url2, pdf_text)
